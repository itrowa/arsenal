;; 采用应用序求值的四则运算器.
;; (operator (operand1, operand2,...))
(define (eval-1 exp)
  (cond ((number? exp) exp)
    ((op? exp) exp)
    ((application? exp) (apply-1 (calc (operator exp))
    (eval-operands (operands exp))))))

(define (op? exp)
  (cond ((= (car exp) '+) #t)
        ((= (car exp) '-) #t)
        ((= (car exp) '*) #t)
        ((= (car exp) '/) #t)
        (else #f)))

(define operator car)
(define operands cdr)

(define (eval-operands operands)
  (cons (eval-1 (car operands)
        (eval-operands (cdr operands)))))

(apply-1 (func args)
  (cond ((= func +) (+ (car args) (cadr args)))
        ((= func -) (- (car args) (cadr args)))
        ((= func *) (* (car args) (cadr args)))
        ((= func /) (/ (car args) (cadr args)))
